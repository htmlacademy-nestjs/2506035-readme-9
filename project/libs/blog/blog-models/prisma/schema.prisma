// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id               String     @id @default(uuid())
  type             PostType
  content          Json
  tags             Tag[]
  comments         Comment[]
  favorite         Favorite[]
  status           PostStatus
  userId           String     @map("user_id")
  createdAt        DateTime   @default(now()) @map("created_at")
  updatedAt        DateTime   @updatedAt @map("updated_at")
  isRepost         Boolean    @default(false) @map("is_repost")
  originalPostId   String?    @map("original_post_id")
  originalAuthorId String?    @map("original_author_id")

  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  userId    String   @map("user_id")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    String   @map("post_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([postId])
  @@map("comments")
}

model Favorite {
  userId String @map("user_id")
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId String @map("post_id")

  @@id([userId, postId])
  @@map("favorites")
}

model Tag {
  name  String @id @unique
  posts Post[]

  @@map("tags")
}

model Notification {
  id        String   @id @default(uuid())
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("notify")
}

enum PostType {
  LINK
  PHOTO
  QUOTE
  TEXT
  VIDEO
}

enum PostStatus {
  DRAFT
  PUBLISHED
}
